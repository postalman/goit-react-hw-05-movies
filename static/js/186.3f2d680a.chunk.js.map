{"version":3,"file":"static/js/186.3f2d680a.chunk.js","mappings":"gNAyCA,UArCgB,SAAC,GAAe,IAAdA,EAAa,EAAbA,QAChB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEP,mCAFO,SAGCC,EAAAA,EAAAA,IAAA,6CACiBN,EADjB,4BADR,qCAFO,OAGhBO,EAHgB,OAMtBJ,EAAWI,EAASC,KAAKC,SANH,gDAQtBC,QAAQC,IAAI,gCAAZ,MARsB,yDAAH,qDAYvBN,GACD,GAAE,CAACL,KAGF,yBACGE,EAAQU,OAAS,GAChB,wBACGV,EAAQW,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,uBAAG,+CAIV,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst Reviews = ({movieId}) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const apiKey = '4b5f3337782451842d3d2458bd4af72e';\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n        );\n        setReviews(response.data.results);\n      } catch (error) {\n        console.log('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["movieId","useState","reviews","setReviews","useEffect","fetchMovieReviews","axios","response","data","results","console","log","length","map","review","author","content","id"],"sourceRoot":""}