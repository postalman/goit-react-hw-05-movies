{"version":3,"file":"static/js/387.10e4db84.chunk.js","mappings":"iQAEaA,E,OAAYC,GAAAA,IAAH,4F,SC4CtB,EAxCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,0FACT,mCADS,SAEDC,EAAAA,EAAAA,IAAA,6CACiBP,EADjB,4BADR,qCADS,OAElBQ,EAFkB,OAKxBJ,EAAQI,EAASC,KAAKN,MALE,2CAAH,qDAQvBG,GACD,GAAE,CAACN,KAGF,yBACGG,EAAKO,OAAS,GACb,wBACGP,EAAKQ,KAAI,SAAAC,GAAK,OACb,0BACGA,EAAMC,eACL,SAACf,EAAD,CACEgB,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAKH,EAAMI,QAGf,wBAAKJ,EAAMI,QACX,yBAAG,cAAYJ,EAAMK,eARdL,EAAMM,GADF,OAcjB,uBAAG,oCAIV,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledImg = styled.img`\n  height: 175px;\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { StyledImg } from './Cast.styled';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      const apiKey = '4b5f3337782451842d3d2458bd4af72e';\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n      );\n      setCast(response.data.cast);\n    };\n\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              {actor.profile_path && (\n                <StyledImg\n                  src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              )}\n              <h3>{actor.name}</h3>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast information available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};"],"names":["StyledImg","styled","movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCredits","axios","response","data","length","map","actor","profile_path","src","alt","name","character","id"],"sourceRoot":""}