{"version":3,"file":"static/js/115.9463ab45.chunk.js","mappings":"iOAuEA,UAlEe,WACb,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACkB,YAAtBF,EAASG,UACXT,EAAS,GAEZ,GAAE,CAACM,KAEJE,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAaN,EAAaO,IAAI,UAAY,GAC5CD,GACFV,EAASU,GACTE,EAAYF,IAEZR,EAAU,GAEb,GAAE,CAACE,EAAcC,IAElB,IAAMO,EAAW,mCAAG,WAAMC,GAAN,6EACH,mCADG,SAEKC,EAAAA,EAAAA,IAAA,4DADR,mCACQ,kBACgDD,IAHrD,OAEZE,EAFY,OAKlBb,EAAUa,EAASC,KAAKC,SALN,2CAAH,sDAoBjB,OAFAC,QAAQC,IAAIpB,GACZmB,QAAQC,IAAIb,IAEV,4BACE,wBAAI,mBACJ,kBAAMc,SAfW,SAAAC,GAEnB,GADAA,EAAEC,iBACmB,KAAjBvB,EAAMwB,OAAe,CACvB,IAAMC,EAAS,IAAIC,gBACnBD,EAAOE,IAAI,QAAS3B,GACpBM,EAAgBmB,GAChBZ,EAAYb,EACb,CACF,EAOG,WACE,kBACE4B,KAAK,OACLC,MAAO7B,EACP8B,SAAU,SAAAR,GAAC,OAAIrB,EAASqB,EAAES,OAAOF,MAAtB,KAEb,mBAAQD,KAAK,SAAb,SAAsB,eAExB,wBACG1B,EAAO8B,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM9B,GAAhD,SACG0B,EAAMK,SAFFL,EAAME,GADA,QAUxB,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.pathname === '/movies') {\n      setQuery('');\n    }\n  }, [location]);\n\n  useEffect(() => {\n    const savedQuery = searchParams.get('query') || '';\n    if (savedQuery) {\n      setQuery(savedQuery);\n      fetchMovies(savedQuery);\n    } else {\n      setMovies([]);\n    }\n  }, [searchParams, setSearchParams]);\n\n  const fetchMovies = async searchQuery => {\n    const apiKey = '4b5f3337782451842d3d2458bd4af72e';\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchQuery}`\n    );\n    setMovies(response.data.results);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() !== '') {\n      const params = new URLSearchParams();\n      params.set('query', query);\n      setSearchParams(params);\n      fetchMovies(query);\n    }\n  };\n\n  console.log(query);\n  console.log(location);\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  movieId: PropTypes.string,\n};\n"],"names":["useState","query","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","pathname","savedQuery","get","fetchMovies","searchQuery","axios","response","data","results","console","log","onSubmit","e","preventDefault","trim","params","URLSearchParams","set","type","value","onChange","target","map","movie","to","id","state","from","title"],"sourceRoot":""}