{"version":3,"file":"static/js/375.f9d28070.chunk.js","mappings":"4RAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6GAQVE,EAAkBF,EAAAA,GAAAA,IAAH,yHAMfG,EAAkBH,EAAAA,GAAAA,IAAH,+EAMfI,EAAYJ,EAAAA,GAAAA,IAAH,gGAKTK,EAAaL,EAAAA,GAAAA,IAAH,sJAOVM,EAAYN,EAAAA,GAAAA,OAAH,+O,SC9BhBO,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAgGrB,EA9FqB,WACnB,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAsCN,EAAAA,EAAAA,WAAS,GAA/C,eAAOO,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAwBjB,IArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEP,mCAFO,SAGCC,EAAAA,EAAAA,IAAA,6CACiBjB,EADjB,oBADR,qCAFO,OAGhBkB,EAHgB,OAMtBd,EAASc,EAASC,MANI,gDAQtBb,EAAS,KAAMc,SARO,yDAAH,qDAYvBJ,GACD,GAAE,CAAChB,KAEJe,EAAAA,EAAAA,YAAU,WACRP,EAAYG,EAASU,SAASC,SAAS,SACvCZ,EAAeC,EAASU,SAASC,SAAS,WAC3C,GAAE,CAACX,IAEAN,EACF,OAAO,2BAAK,iCAA+BA,KAG7C,IAAKF,EACH,OAAO,yBAAK,eAGd,IAAQoB,EACNpB,EADMoB,YAAaC,EACnBrB,EADmBqB,MAAOC,EAC1BtB,EAD0BsB,aAAcC,EACxCvB,EADwCuB,aAAcC,EACtDxB,EADsDwB,SAAUC,EAChEzB,EADgEyB,OAOlE,OACE,4BACE,0BACE,SAAChC,EAAD,CAAWiC,QAPF,WACbhB,EAAS,IACV,EAKK,SAA4B,eAE9B,UAACrB,EAAD,YACE,0BACE,SAACE,EAAD,CAAWoC,IAAG,0CAAqCP,GAAeQ,IAAKP,OAEzE,UAAC/B,EAAD,YACE,0BAAK+B,EAAM,KAAGC,EAAaO,UAAU,EAAG,GAAG,QAC3C,yBAAG,eAAaN,EAAa,SAC7B,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,uBAAIC,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAI7C,UAACzC,EAAD,YACE,uBAAG,6BACH,2BACE,yBACE,SAACN,EAAD,CAAYgD,GAAE,iBAAYrC,EAAZ,SAAd,SAA0C,YAE5C,yBACE,SAACX,EAAD,CAAYgD,GAAE,iBAAYrC,EAAZ,YAAd,SAA6C,oBAKlDO,IAAaE,IACZ,+BACE,SAACZ,EAAD,CAAMG,QAASA,MAIlBS,IAAgBF,IACf,+BACE,SAACR,EAAD,CAASC,QAASA,OAItB,SAAC,KAAD,MAGL,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n    font-size: 21px;\n    font-weight:600;\n    &:hover{\n        color:red;\n    }\n`\n\nexport const StyledContainer = styled.div`\n    display:flex;\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n    margin-bottom: 40px;\n`\n\nexport const StyledDivMargin = styled.div`\n    margin-left: 20px;\n    padding-left: 10px;\n    \n`\n\nexport const StyledImg = styled.img`\n    height: 350px;\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n`\n\nexport const StyledInfo = styled.div`\n    padding-bottom: 10px;\n    padding-top:10px;\n    padding-left:10px;\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.15);\n`\n\nexport const StyledBtn = styled.button`\n    background-color: grey;\n        color: white;\n        padding: 10px 20px;\n        border-radius: 5px;\n        border: none;\n        cursor: pointer;\n        margin-top:10px;\n        margin-bottom: 10px;\n`","import React, { useEffect, useState, lazy } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { StyledLink, StyledContainer, StyledDivMargin, StyledImg, StyledInfo, StyledBtn } from '../MovieDetails/MovieDetails.styled'\n\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // console.log(movie);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const apiKey = '4b5f3337782451842d3d2458bd4af72e';\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n        );\n        setMovie(response.data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    \n    fetchMovieDetails();\n  }, [movieId]);\n\n  useEffect(() => {\n    setShowCast(location.pathname.includes('cast'));\n    setShowReviews(location.pathname.includes('reviews'));\n  }, [location]);\n\n  if (error) {\n    return <div>Error fetching movie details: {error}</div>;\n  }\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  const goBack = () => {\n    navigate('/');\n  };\n\n  return (\n    <div>\n      <div>\n        <StyledBtn onClick={goBack}>Go back</StyledBtn>\n      </div>\n      <StyledContainer>\n        <div>\n          <StyledImg src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} />\n        </div>\n        <StyledDivMargin>\n          <h2>{title} ({release_date.substring(0, 4)})</h2>\n          <p>User Score: {vote_average} %</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(genre => genre.name).join(', ')}</p>\n        </StyledDivMargin>\n      </StyledContainer>\n\n      <StyledInfo>\n        <p>Additional Information:</p>\n        <ul>\n          <li>\n            <StyledLink to={`/movie/${movieId}/cast`}>Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to={`/movie/${movieId}/reviews`}>Reviews</StyledLink>\n          </li>\n        </ul>\n      </StyledInfo>\n\n      {showCast && !showReviews && (\n        <>\n          <Cast movieId={movieId} />\n        </>\n      )}\n\n      {showReviews && !showCast && (\n        <>\n          <Reviews movieId={movieId} />\n        </>\n      )}\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledLink","styled","Link","StyledContainer","StyledDivMargin","StyledImg","StyledInfo","StyledBtn","Cast","lazy","Reviews","movieId","useParams","useState","movie","setMovie","error","setError","showCast","setShowCast","showReviews","setShowReviews","location","useLocation","navigate","useNavigate","useEffect","fetchMovieDetails","axios","response","data","message","pathname","includes","poster_path","title","release_date","vote_average","overview","genres","onClick","src","alt","substring","map","genre","name","join","to"],"sourceRoot":""}