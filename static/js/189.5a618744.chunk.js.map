{"version":3,"file":"static/js/189.5a618744.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const apiKey = '4b5f3337782451842d3d2458bd4af72e';\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n        );\n        setCast(response.data.cast);\n      } catch (error) {\n        console.log('Error fetching movie cast:', error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                alt={actor.name}\n              />\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast information available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const apiKey = '4b5f3337782451842d3d2458bd4af72e';\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n        );\n        setReviews(response.data.results);\n      } catch (error) {\n        console.log('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const apiKey = '4b5f3337782451842d3d2458bd4af72e';\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n        );\n        setMovie(response.data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  useEffect(() => {\n    setShowCast(location.pathname.includes('cast'));\n    setShowReviews(location.pathname.includes('reviews'));\n  }, [location]);\n\n  if (error) {\n    return <div>Error fetching movie details: {error}</div>;\n  }\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  const goBack = () => {\n    navigate('/');\n  };\n\n  return (\n    <div>\n      <Link to=\"/\" onClick={goBack}>Go back</Link>\n\n      <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} />\n      <h2>{title}</h2>\n      <p>Year: {release_date.substring(0, 4)}</p>\n      <p>User Score: {vote_average} %</p>\n      <p>Overview: {overview}</p>\n      <p>Genres: {genres.map(genre => genre.name).join(', ')}</p>\n\n      <div>\n        <p>Additional Information:</p>\n        <ul>\n          <li>\n            <Link to={`/movie/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movie/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n\n      {showCast && !showReviews && (\n        <>\n          <Cast />\n        </>\n      )}\n\n      {showReviews && !showCast && (\n        <>\n          <Reviews />\n        </>\n      )}\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCast","axios","response","data","console","log","length","map","actor","src","profile_path","alt","name","character","id","reviews","setReviews","fetchMovieReviews","results","review","author","content","movie","setMovie","error","setError","showCast","setShowCast","showReviews","setShowReviews","location","useLocation","navigate","useNavigate","fetchMovieDetails","message","pathname","includes","poster_path","title","release_date","vote_average","overview","genres","to","onClick","substring","genre","join"],"sourceRoot":""}